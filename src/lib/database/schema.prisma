datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //   shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/migrate-shadow
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @unique @default(cuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Poul      Poul[]
  Score     Score[]
}

model Poul {
  id        String   @id @unique @default(cuid())
  owner     String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User  User    @relation(fields: [owner], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Score Score[]
  Match Match[]
}

model Score {
  id        String   @id @unique @default(cuid())
  userId    String
  pouleId   String
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Poul Poul @relation(fields: [pouleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Match {
  id        String   @id @unique @default(cuid())
  pouleId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Poul Poul @relation(fields: [pouleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
